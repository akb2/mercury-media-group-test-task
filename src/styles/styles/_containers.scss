@use '../settings/screens';

@use 'sass:map';
@use '../functions/maps' as _maps;

@use '../mixins/flex';

@use '../styles/bootstrap';





//----------------------------------------------------------------------------------------------------------------------------------------
// Настройки
//----------------------------------------------------------------------------------------------------------------------------------------


  $settings: (
    padding-horizontal: (
      default: _maps.get( bootstrap.$settings, spacing ),
    ),

    padding-verticals: (

      // Общие отступы
      default: (
        tablet: 60px,
        mobile: 30px,
        default: _maps.get( bootstrap.$settings, spacing ),
      ),

      // Без отступов
      without: (
        default: 0px,
      ),

      // Без отступов
      large: (
        default: 95px,
        all: 30px,
      )
    ),

    width: (
      default: 1200px,
      desktop: 1170px,
      tablet: 920px,
      mobile: 670px,
      all: 100%,
    )
  );


//----------------------------------------------------------------------------------------------------------------------------------------
// Настройки
//----------------------------------------------------------------------------------------------------------------------------------------





//----------------------------------------------------------------------------------------------------------------------------------------
// Стили
//----------------------------------------------------------------------------------------------------------------------------------------


  // Базовый стиль
  .container {
    @include screens.media((
      padding-left: _maps.get( $settings, padding-horizontal ),
      padding-right: _maps.get( $settings, padding-horizontal ),
    ));
    width: 100%; margin: 0 auto;


    // Ширина контейнера
    @each $screen in _maps.get( screens.$breakpoints-sort, to-min ) {
      @include screens.for-size( $screen ) {
        $__width: _maps.get( $settings, width, $screen );
        $__pad_h: _maps.get( $settings, padding-horizontal, $screen );

        max-width: calc( #{ $__width });
      }
    }


    // Отступы сверху и снизу
    @each $key, $values in _maps.get( $settings, padding-verticals ) {
      $class: '';
      @if ( $key != default ) { $class: '_' + $key; }

      &#{ $class } {
        @include screens.media((
          padding-top: _maps.get( $settings, padding-verticals, $key ),
          padding-bottom: _maps.get( $settings, padding-verticals, $key ),
        ));

        & > .title {
          @include screens.media((
            margin-bottom: _maps.get( $settings, padding-verticals, $key ),
          ));
        }

        & > .container-spacing {
          @include screens.media((
            margin-top: _maps.get( $settings, padding-verticals, $key ),
          ));
        }

        .inner-spacing {
          @include screens.media((
            margin-top: _maps.get( $settings, padding-verticals, $key ),
          ));
        }

        @each $dimension in top bottom {
          .minus-#{ $dimension } {
            $__temp_sizes: _maps.get( $settings, padding-verticals, $key );
            @each $key, $value in $__temp_sizes {
              $__temp_sizes: map.set( $__temp_sizes, $key, -$value );
            }

            @include screens.media((
              margin-#{ $dimension }: $__temp_sizes,
            ));
          }
        }
      }
    }
  }


  // Убрать отступы между секциями
  .section, header {
    & + .section:not( .ignore-spacing ) {
      & > .container:not( .ignore-spacing ) { padding-top: 0; }
    }
  }


//----------------------------------------------------------------------------------------------------------------------------------------
// Стили
//----------------------------------------------------------------------------------------------------------------------------------------